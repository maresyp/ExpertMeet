[tox]
requires = tox
env_list = lint_backend, type_backend, expertmeet, notifications, conversations

[gh-actions]
python =
    3.12: lint_backend, type_backend, expertmeet, notifications, conversations

[testenv]
description = Base setup for django testing
basepython = python3.12
setenv =
    PYTONPATH={toxinidir}
passenv = *
changedir=src/backend/{envname}
deps =
    -r{toxinidir}/requirements-dev.txt
    -r{toxinidir}/src/backend/{envname}/requirements.txt
commands =
    python manage.py check --fail-level WARNING
    pytest {toxinidir}/src/backend/tests/{envname} \
    --basetemp={envtmpdir} -rA \
    --html={toxinidir}/src/backend/tests/reports/{envname}/test-report.html \
    --cov={toxinidir}/src/backend/{envname} \
    --cov-report html:{toxinidir}/src/backend/tests/reports/{envname}/coverage

[testenv:expertmeet]
description = Run unit tests for expertmeet service
setenv =
    DJANGO_SETTINGS_MODULE = expertmeet.settings

[testenv:notifications]
description = Run unit tests for notifications service
setenv =
    DJANGO_SETTINGS_MODULE = notifications.settings

[testenv:conversations]
description = Run unit tests for conversations service
setenv =
    DJANGO_SETTINGS_MODULE = conversations.settings

[testenv:lint_backend]
description = Run Ruff linter
changedir={toxinidir}
deps = ruff
commands =
    ruff check {toxinidir}/src/backend -q

[testenv:type_backend]
description = Run mypy type checker
changedir={toxinidir}
deps = mypy
commands =
    mypy --install-types --non-interactive {toxinidir}/src/backend