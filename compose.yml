version: "3.9"
name: expertmeet

services:
  backend-web-server:
    env_file:
      - .env
    container_name: expertmeet-backend-web-server
    build:
      src/backend/expertmeet
    ports:
      - 8080:8080
    depends_on:
      - db-postgres-web

  frontend-web-server:
    container_name: expertmeet-frontend-web-server
    build:
      src/frontend/web
    ports:
      - 80:80
    depends_on:
      - backend-web-server
      - notifications-server
      # TODO : add second server

  notifications-server:
      container_name: expertmeet-notifications-server
      env_file:
      - .env
      expose:
        - 8081
      build:
        src/backend/notifications

  # TODO: add messaging web server

  db-postgres-web:
    container_name: expertmeet-web-db
    image: postgres
    user: postgres
    restart: "on-failure"
    volumes:
      - db-data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_PORT=5432
    ports: # TODO : hide this port after testing is done
      - 5432:5432
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  db-postgres-notifications:
    container_name: expertmeet-notifications-db
    image: postgres
    user: postgres
    restart: "on-failure"
    volumes:
      - db-notifications:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_PORT=5433
    expose:
      - 5433
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db-data:
    driver: local
  db-notifications:
    driver: local