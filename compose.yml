version: "3.9"
name: expertmeet

services:
  backend-web-server:
    env_file:
      - .env
    container_name: expertmeet-web-server
    build:
      src/backend/expertmeet

    depends_on:
      - db-postgres

  frontend-web-server:
    container_name: expertmeet-frontend-web-server
    build:
      src/frontend/web
    ports:
      - 80:80
    depends_on:
      - backend-web-server
      # TODO : add second server

  # TODO: add messaging web server

  db-postgres:
    container_name: expertmeet-db-web
    image: postgres
    user: postgres
    restart: "on-failure"
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_PORT=5432
    ports: # TODO : hide this port after testing is done
      - 5432:5432
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  db-mongo:
    container_name: expertmeet-db-mongo
    image: mongo
    restart: "on-failure"
    volumes:
      - db-data:/data/db
    expose:
      - 27017
    ports: # TODO : hide this port after testing is done
      - 27017:27017
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.stats()" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db-data:
    driver: local